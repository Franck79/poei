<?php
  use Drupal\Core\Routing\RouteMatchInterface;
  use Drupal\user\UserInterface;
  use Drupal\Core\Session\AccountInterface;
  use Drupal\Core\Form\FormStateInterface;

  function hello_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {

      // Main module help for the block module.
      case 'help.page.hello':
        return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href=":blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', [
            ':blocks' => \Drupal::url('block.admin_display'),
          ]) . '</p>';

      // Help for another path in the block module.
      case 'block.admin_display':
        return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
    }
  }

   function hello_cron() {

    //drupal_set_message('Hello');

    $purge_day_number = \Drupal::config('hello.settings')->get('purge_days_number');

    if($purge_day_number != 0) {

      $delete_rec_number = \Drupal::database()->delete('hello_user_statistics')
        ->condition('time', REQUEST_TIME - $purge_day_number * (24 * 3600), '<=')
        ->execute();
    }

    \Drupal::messenger()->addMessage(t('%delete_records records has benn deleted',
      ['%delete_records' => $delete_rec_number]));

  }

  /**
 * @param \Drupal\user\UserInterface $account
 */

function hello_user_login(UserInterface $account) {

  $database = \Drupal::database();

  $user_id = $account->id();

  $roles = \Drupal::config('hello.settings')->get('user_statistics_roles');

  $user_roles = $account->getRoles();

  $diff = array_intersect($roles,$user_roles);

  //ksm($diff);

  if(count($diff > 0)) {

    $database->insert('hello_user_statistics')
              ->fields([
                'uid' => $user_id,
                'time' => REQUEST_TIME,
                'action' => '1',
              ])
                ->execute();

  }



  \Drupal::messenger()->addMessage(t('Welcome dear %name !', ['%name' => $account->getAccountName()]));

}

function hello_user_logout(AccountInterface $account) {

  $database = \Drupal::database();

  $user_id = $account->id();

  $roles = \Drupal::config('hello.settings')->get('user_statistics_roles');

  $user_roles = $account->getAccount()->getRoles();

  $diff = array_intersect($roles,$user_roles);

  if(count($diff > 0)) {

      $database->insert('hello_user_statistics')
        ->fields([
          'uid' => $user_id,
          'time' => REQUEST_TIME,
          'action' => '0',
        ])
        ->execute();

  }

}

function hello_user_delete(UserInterface $account) {

  $database = \Drupal::database();
  //ksm($account);
  $database->delete('hello_user_statistics')
    ->condition('uid', $account->id())
    ->execute();

}

function hello_theme() {

  return array(
    'hello_user_connexion' => array(
      'template' => 'hello_user_connexion',
      'variables' => array('user' => NULL, 'count' => NULL),

    ),

  );

}

function hello_form_user_admin_settings_alter(array &$form, &$form_state) {

  //ksm($form);

  $user_statistics_roles = \Drupal::config('hello.settings')->get('user_statistics_roles');

  $roles_name = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();

  $roles = [];

  foreach($roles_name as $value) {

    $roles[$value->id()] = $value->label();

  }

  unset($roles['anonymous']);
  unset($roles['authenticated']);

  //ksm($roles);
  $form['user_statistics'] = array(
    '#type' => 'details',
    '#title' => t('Roles for witch to collect activity statistics.'),
    '#open' => TRUE,
    '#weight' => '-100',

  );

  $form['user_statistics']['roles'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Roles Users.'),
      '#options' => $roles,
      '#default_value' => $user_statistics_roles,
  );

    $form['#submit'][] = 'hello_admin_user_settings_submit';

}

function hello_admin_user_settings_submit($form, FormStateInterface $form_state) {

  $config = \Drupal::configFactory()->getEditable('hello.settings');
  $config->set('user_statistics_roles', $form_state->getValue('roles'))->save();

}




